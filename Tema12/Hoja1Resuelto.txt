1.
BEGIN
DBMS_OUTPUT.Put_LINE('Hola');
END;

2.
DECLARE
v_num1 NUMBER;
v_num2 NUMBER;
v_result NUMBER;
BEGIN
v_result:=&v_num1 + &v_num2;
DBMS_OUTPUT.PUT_LINE(v_result);
END;

//PROCEDIMIENTO
CREATE OR REPLACE PROCEDURE suma(num1 number, num2 number)
IS
BEGIN
dbms_output.put_line(num1+num2);
END;

3.
DECLARE
cadenafin varchar2(30);
BEGIN
select (reverse('cadena&')) INTO cadenafin from dual;
DBMS_OUTPUT.PUT_LINE(cadenafin);
END;

CREATE OR REPLACE PROCEDURE invertir (cadena varchar2)
IS
cadenafin varchar2(30);
BEGIN
select (reverse(cadena)) INTO cadenafin from dual;
DBMS_OUTPUT.PUT_LINE(cadenafin);
END;

4.

CREATE OR REPLACE FUNCTION extraer_anyo(fecha date)
RETURN NUMBER
AS
BEGIN
RETURN(EXTRACT(year FROM fecha));
END;

5.
BEGIN
extraer_anyo(sysdate);
END;

6.

7.

CREATE OR REPLACE FUNCTION dif_anyos (fecha1 date, fecha2 date)
RETURN NUMBER
IS
BEGIN
RETURN ABS((extract(year from fecha1) - extract(year from fecha2)));
END;

8.

CREATE OR REPLACE FUNCTION dif_trienios (fecha1 date, fecha2 date)
RETURN NUMBER
IS
BEGIN
RETURN (dif_anyos(fecha1, fecha2)/3);
END;

9.
CREATE OR REPLACE PROCEDURE suma5 (num1 number default 0 , num2 number default 0, num3 number default 0, num4 number default 0, num5 number default 0)
IS
v_result number;
BEGIN
v_result:=num1+num2+num3+num4+num5;
DBMS_OUTPUT.PUT_LINE(v_result);
END;

10.
CREATE OR REPLACE
  FUNCTION ejercicio10(
      str STRING)
    RETURN STRING
  IS
    resultado STRING(20);
    actual_char STRING(2);
  BEGIN
    FOR indice IN 1..LENGTH(str)
    LOOP
      actual_char                :=SUBSTR(str,indice,1);
      IF NOT (ascii(actual_char) >= 65 AND ascii(actual_char) <= 90 OR (ascii(actual_char) >= 97 AND ascii(actual_char) <= 122)) THEN
        actual_char              :=' ';
      END IF;
     resultado:= resultado|| actual_char;
END LOOP;
RETURN resultado;
END;


11.

CREATE OR REPLACE FUNCTION cambio_moneda(moneda number, importe number)
RETURN number
IS
resto number;
BEGIN
resto:=importe;
while resto>=moneda
LOOP
resto:=resto-moneda;
DBMS_OUTPUT.PUT_LINE(moneda||'â‚¬');
END LOOP;
return resto;
END;

CREATE OR REPLACE PROCEDURE cambio (importe number)
AS
resto number;
BEGIN
resto:=cambio_moneda(50,importe);
resto:=cambio_moneda(20,resto);
resto:=cambio_moneda(10,resto);
resto:=cambio_moneda(5,resto);
resto:=cambio_moneda(2,resto);
resto:=cambio_moneda(1,resto);
resto:=cambio_moneda(0.5,resto);
resto:=cambio_moneda(0.2,resto);
resto:=cambio_moneda(0.10,resto);
resto:=cambio_moneda(0.05,resto);
resto:=cambio_moneda(0.02,resto);
resto:=cambio_moneda(0.01,resto);
END;

DECLARE
importe number;
BEGIN
importe:=&importe;
cambio(importe);
END;


12.

create or replace procedure borrar_empl(numero EMPLE.EMP_NO%TYPE)
as
BEGIN
DELETE from emple where emp_no = numero;
END;

13.

create or replace procedure modificar_localidad_dpto(depto depart.dept_no%TYPE, localidad depart.loc%TYPE)
AS
BEGIN
update depart
set loc = localidad
where dept_no = depto;
END;

14.
select object_name, object_type, status from user_objects;
